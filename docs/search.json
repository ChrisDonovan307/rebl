[{"path":"https://tshrum.github.io/rebl/articles/Usage.html","id":"running-the-rasch-model","dir":"Articles","previous_headings":"","what":"Running the Rasch Model","title":"Using the Package","text":"","code":"library(rebl)  # Example data frame str(raw_example) ## 'data.frame':    100 obs. of  25 variables: ##  $ respondent_id             : chr  \"p1\" \"p2\" \"p3\" \"p4\" ... ##  $ foodLocal                 : chr  \"Yes\" \"Yes\" \"No\" \"Yes\" ... ##  $ foodLunchNoMeat           : chr  \"No\" \"No\" \"Yes\" \"Yes\" ... ##  $ foodMeat                  : chr  \"Yes\" \"No\" \"Yes\" \"No\" ... ##  $ foodOatMilk               : chr  \"No\" \"No\" \"No\" \"Yes\" ... ##  $ foodTofu                  : chr  \"No\" \"No\" \"Yes\" \"Yes\" ... ##  $ foodVegan                 : chr  \"No\" \"No\" \"No\" \"Yes\" ... ##  $ homeClothesCold           : chr  \"Yes\" \"Yes\" \"Yes\" \"Yes\" ... ##  $ homeClothesHang           : chr  \"Yes\" \"No\" \"No\" \"No\" ... ##  $ homeLightsOff             : chr  \"No\" \"No\" \"Yes\" \"Yes\" ... ##  $ packCarriedUtensils       : chr  \"No\" \"No\" \"No\" \"Yes\" ... ##  $ packCompost               : chr  \"Yes\" \"No\" \"Yes\" \"No\" ... ##  $ packContainerToRestaurant : chr  \"No\" \"Yes\" \"Yes\" \"No\" ... ##  $ packPickedUpLitter        : chr  \"Yes\" \"Yes\" \"Yes\" \"Yes\" ... ##  $ packPullRecycleFromTrash  : chr  \"Yes\" \"Yes\" \"No\" \"No\" ... ##  $ packRags                  : chr  \"No\" \"Yes\" \"Yes\" \"Yes\" ... ##  $ packReusableMug           : chr  \"No\" \"Yes\" \"No\" \"No\" ... ##  $ packReusedPaperPlasticBags: chr  \"No\" \"Yes\" \"No\" \"Yes\" ... ##  $ purchBuyNothing           : chr  \"No\" \"No\" \"Yes\" \"No\" ... ##  $ socialDocumentary         : chr  \"Yes\" \"No\" \"No\" \"No\" ... ##  $ socialGroup               : chr  \"Yes\" \"Yes\" \"Yes\" \"Yes\" ... ##  $ socialRead                : chr  \"Yes\" \"No\" \"No\" \"No\" ... ##  $ socialSupportive          : chr  \"No\" \"No\" \"Yes\" \"Yes\" ... ##  $ waterShowerStop           : chr  \"No\" \"Yes\" \"No\" \"No\" ... ##  $ waterTeethStop            : chr  \"Yes\" \"Yes\" \"No\" \"Yes\" ... # Identify REBL items with regex.  # Here we take everything that does not start with 'res' (rebl_items <- id_rebl_items(raw_example, '^(?!res).*', perl = TRUE)) ##  [1] \"foodLocal\"                  \"foodLunchNoMeat\"            ##  [3] \"foodMeat\"                   \"foodOatMilk\"                ##  [5] \"foodTofu\"                   \"foodVegan\"                  ##  [7] \"homeClothesCold\"            \"homeClothesHang\"            ##  [9] \"homeLightsOff\"              \"packCarriedUtensils\"        ## [11] \"packCompost\"                \"packContainerToRestaurant\"  ## [13] \"packPickedUpLitter\"         \"packPullRecycleFromTrash\"   ## [15] \"packRags\"                   \"packReusableMug\"            ## [17] \"packReusedPaperPlasticBags\" \"purchBuyNothing\"            ## [19] \"socialDocumentary\"          \"socialGroup\"                ## [21] \"socialRead\"                 \"socialSupportive\"           ## [23] \"waterShowerStop\"            \"waterTeethStop\" # Recode REBL items from Yes/No to 1/0 df <- recode_rebl(raw_example, rebl_items)  # To reverse code reversed REBL items (where 0 is the PEB), first identify them. # Just using all food items as an example (reversed_items <- id_reversed_rebl_items(rebl_items, '^food')) ## [1] \"foodLocal\"       \"foodLunchNoMeat\" \"foodMeat\"        \"foodOatMilk\"     ## [5] \"foodTofu\"        \"foodVegan\" # Now recode the reversed items in the df df <- reverse_code_rebl_items(df, reversed_items)"},{"path":"https://tshrum.github.io/rebl/articles/Usage.html","id":"getting-rebl-scores","dir":"Articles","previous_headings":"","what":"Getting REBL Scores","title":"Using the Package","text":"","code":"# Run Rasch Model model <- get_rasch_model(df, 'respondent_id', rebl_items)  # Throws warning if some items are not found in df model <- get_rasch_model(df, 'respondent_id', c(rebl_items, 'ffff', 'zzzz')) ## Warning in get_rasch_model(df, \"respondent_id\", c(rebl_items, \"ffff\", \"zzzz\")): ## 2 REBL item(s) not included in data frame: ffff, zzzz # Get a df of REBL scores and person fit statistics rebl_scores <- get_rebl_scores(model)  # Only REBL scores, no fits rebl_only <- get_rebl_scores(model, include_fits = FALSE)"},{"path":"https://tshrum.github.io/rebl/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://tshrum.github.io/rebl/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2025). rebl: Package (One Line, Title Case). R package version 0.0.0.9000.","code":"@Manual{,   title = {rebl: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2025},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":"https://tshrum.github.io/rebl/CLAUDE.html","id":"project-description","dir":"","previous_headings":"","what":"Project Description","title":"Project: REBL","text":"Analyze survey data using Rasch model.","code":""},{"path":"https://tshrum.github.io/rebl/CLAUDE.html","id":"code-conventions","dir":"","previous_headings":"","what":"Code Conventions","title":"Project: REBL","text":"renv manage dependencies Tidy style Lower snake case naming functions objects Using code coverage assess testing Functions include assertthat::test_that() calls beginning ensure user providing appropriate inputs Functions include @seealso documentation linking related functions","code":""},{"path":"https://tshrum.github.io/rebl/CLAUDE.html","id":"project-structure","dir":"","previous_headings":"","what":"Project Structure","title":"Project: REBL","text":"table_of_contents.R - Main script runs others. Allows user navigate project /1_raw - Raw data files /2_clean - Clean data files /3_functions - Functions project. converted proper R package functions /4_scripts - Scripts project development REBL items scores. /5_objects - Intermediate objects used data analysis /6_outputs - Tabular outputs paper /7_plots - Figures paper","code":""},{"path":"https://tshrum.github.io/rebl/CLAUDE.html","id":"package-structure","dir":"","previous_headings":"","what":"Package Structure","title":"Project: REBL","text":"/R - Functions /data - Datasets associated package example use testing /man - Documentation /test - Testing suite /revamp - Temporary folder rework. committed git","code":""},{"path":"https://tshrum.github.io/rebl/index.html","id":"rebl-scale","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"Dr.Â Trisha Shrum, Chris Donovan September 06, 2025","code":""},{"path":"https://tshrum.github.io/rebl/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"What the Package Does (One Line, Title Case)","text":"repository Repeated Environmental Behavior Latent (REBL) Scale project. contains code build REBL scale raw data visualizations.","code":""},{"path":[]},{"path":"https://tshrum.github.io/rebl/index.html","id":"installation","dir":"","previous_headings":"REBL Package","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"install rebl package:","code":"# install.packages('remotes') remotes::install_github('tshrum/rebl')"},{"path":[]},{"path":"https://tshrum.github.io/rebl/index.html","id":"recoding-survey","dir":"","previous_headings":"REBL Package > Using the Package","what":"Recoding Survey","title":"What the Package Does (One Line, Title Case)","text":"","code":"library(rebl)  # Example data frame str(raw_example)  # Identify REBL items with regex.  # Here we take everything that does not start with 'res' (rebl_items <- id_rebl_items(raw_example, '^(?!res).*', perl = TRUE))  # Recode REBL items from Yes/No to 1/0 df <- recode_rebl(raw_example, rebl_items)  # To reverse code reversed REBL items (where 0 is the PEB), first identify them. # Just using all food items as an example (reversed_items <- id_reversed_rebl_items(rebl_items, '^food'))  # Now recode the reversed items in the df df <- reverse_code_rebl_items(df, reversed_items)"},{"path":"https://tshrum.github.io/rebl/index.html","id":"getting-rebl-scores","dir":"","previous_headings":"REBL Package > Using the Package","what":"Getting REBL Scores","title":"What the Package Does (One Line, Title Case)","text":"","code":"# Run Rasch Model model <- get_rasch_model(df, 'respondent_id', rebl_items)  # Throws warning if some items are not found in df model <- get_rasch_model(df, 'respondent_id', c(rebl_items, 'ffff', 'zzzz')) #> Warning in get_rasch_model(df, \"respondent_id\", c(rebl_items, \"ffff\", \"zzzz\")): #> 2 REBL item(s) not included in data frame: ffff, zzzz  # Get a df of REBL scores and person fit statistics rebl_scores <- get_rebl_scores(model)  # Only REBL scores, no fits rebl_only <- get_rebl_scores(model, include_fits = FALSE)"},{"path":"https://tshrum.github.io/rebl/index.html","id":"file-structure","dir":"","previous_headings":"REBL Package","what":"File Structure","title":"What the Package Does (One Line, Title Case)","text":"project halfway transitioning package (2025-09-03). package usual structure: R/: Functions data/: Built-datasets. Used examples testing. data-raw/: Scripts create built-datasets. man/: Documentation tests/: Test suite using testthat DESCRIPTION: Package information, license, author NAMESPACE: Exports imports meantime, functions duplicated across 3_functions/ R/ things settled, point hope clear create focused, functional, portable workflow.","code":""},{"path":[]},{"path":[]},{"path":"https://tshrum.github.io/rebl/index.html","id":"dependencies","dir":"","previous_headings":"REBL Project","what":"Dependencies","title":"What the Package Does (One Line, Title Case)","text":"project set renv. restore packages used project, use: install packages versions described renv.lock file.","code":"# install.packages('renv') renv::restore()"},{"path":"https://tshrum.github.io/rebl/index.html","id":"navigating-the-project","dir":"","previous_headings":"REBL Project","what":"Navigating the Project","title":"What the Package Does (One Line, Title Case)","text":"opening reb_scale.Rproj, start table_of_contents.R. list relevant scripts order run. Run housekeeping.R script, load helper functions used throughout project. Additional required packages included top script. Using ctrl/cmd + left click text file path table contents open script new tab. objects packages required script loaded top page, important outputs saved end script. , can run entire project table contents, can also just skip script run .","code":""},{"path":"https://tshrum.github.io/rebl/index.html","id":"project-file-structure","dir":"","previous_headings":"REBL Project","what":"Project File Structure","title":"What the Package Does (One Line, Title Case)","text":"1_raw/ raw, untouched, datasets. Metadata embedded files using # comment symbol. 2_clean/ cleaned (wrangled, recoded, imputed, etc.) data. 3_functions/ custom functions stored. housekeeping script load . 4_scripts/ R scripts. 5_objects/ intermediate .rds objects. 6_outputs/ tabular outputs kept. 7_plots/ figures, diagrams, pngs, pdfs, etc.","code":""},{"path":"https://tshrum.github.io/rebl/reference/get_rasch_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Rasch Model â get_rasch_model","title":"Get Rasch Model â get_rasch_model","text":"Fit Rasch model REBL items using eRm package. creates Rasch model object can used calculate person parameters (REBL scores) item parameters.","code":""},{"path":"https://tshrum.github.io/rebl/reference/get_rasch_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Rasch Model â get_rasch_model","text":"","code":"get_rasch_model(df, id, rebl_items, include_fit = TRUE)"},{"path":"https://tshrum.github.io/rebl/reference/get_rasch_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Rasch Model â get_rasch_model","text":"df dataframe containing REBL items participant IDs id character string specifying column name containing participant IDs rebl_items character vector REBL item column names include model include_fit Logical indicating whether include fit statistics (currently implemented function body)","code":""},{"path":"https://tshrum.github.io/rebl/reference/get_rasch_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Rasch Model â get_rasch_model","text":"eRm Rasch model object can passed functions like get_rebl_scores()","code":""},{"path":[]},{"path":"https://tshrum.github.io/rebl/reference/get_rasch_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Rasch Model â get_rasch_model","text":"","code":"if (FALSE) { # \\dontrun{   # Get REBL items   rebl_items <- id_rebl_items(raw_example, '^(?!res).*')    # Fit Rasch model   model <- get_rasch_model(raw_example, \"id\", rebl_items) } # }"},{"path":"https://tshrum.github.io/rebl/reference/get_rebl_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Get REBL Scores â get_rebl_scores","title":"Get REBL Scores â get_rebl_scores","text":"Extract person parameters (REBL scores) fitted Rasch model. Optionally includes person fit statistics assess well person's response pattern fits Rasch model.","code":""},{"path":"https://tshrum.github.io/rebl/reference/get_rebl_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get REBL Scores â get_rebl_scores","text":"","code":"get_rebl_scores(model, include_fits = TRUE)"},{"path":"https://tshrum.github.io/rebl/reference/get_rebl_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get REBL Scores â get_rebl_scores","text":"model fitted eRm Rasch model object get_rasch_model() include_fits Logical indicating whether include person fit statistics output (default: TRUE)","code":""},{"path":"https://tshrum.github.io/rebl/reference/get_rebl_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get REBL Scores â get_rebl_scores","text":"dataframe participant IDs, REBL scores, optionally person fit statistics. include_fits TRUE, includes columns outfit, infit, fit measures eRm::personfit()","code":""},{"path":[]},{"path":"https://tshrum.github.io/rebl/reference/get_rebl_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get REBL Scores â get_rebl_scores","text":"","code":"if (FALSE) { # \\dontrun{   # Fit model and get scores   model <- get_rasch_model(df, \"id\", rebl_items)   scores <- get_rebl_scores(model, include_fits = TRUE)      # Get scores without fit statistics   scores_only <- get_rebl_scores(model, include_fits = FALSE) } # }"},{"path":"https://tshrum.github.io/rebl/reference/id_rebl_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify REBL Items â id_rebl_items","title":"Identify REBL Items â id_rebl_items","text":"Create vector REBL items data frame using regex matching pattern.","code":""},{"path":"https://tshrum.github.io/rebl/reference/id_rebl_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify REBL Items â id_rebl_items","text":"","code":"id_rebl_items(df, pattern, ...)"},{"path":"https://tshrum.github.io/rebl/reference/id_rebl_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify REBL Items â id_rebl_items","text":"df data frame containing REBL items pattern regex matching pattern ... Additional arguments passed grepl()","code":""},{"path":"https://tshrum.github.io/rebl/reference/id_rebl_items.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify REBL Items â id_rebl_items","text":"character vector names REBL items.","code":""},{"path":"https://tshrum.github.io/rebl/reference/id_rebl_items.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify REBL Items â id_rebl_items","text":"convenience function, essential workflow. already vector REBL item names, works just well. Using function might easier harder depending items named. something like rebl_* work quite well. Otherwise, like example, might use \"\" operators represent . vector REBL items required later workflow, however choose get .","code":""},{"path":[]},{"path":[]},{"path":"https://tshrum.github.io/rebl/reference/id_reversed_rebl_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Reversed REBL Items â id_reversed_rebl_items","title":"Identify Reversed REBL Items â id_reversed_rebl_items","text":"Filter vector REBL items identify need reverse coding using regex matching pattern.","code":""},{"path":"https://tshrum.github.io/rebl/reference/id_reversed_rebl_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Reversed REBL Items â id_reversed_rebl_items","text":"","code":"id_reversed_rebl_items(rebl_items, pattern, ...)"},{"path":"https://tshrum.github.io/rebl/reference/id_reversed_rebl_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Reversed REBL Items â id_reversed_rebl_items","text":"rebl_items character vector REBL item names pattern regex matching pattern identify items need reverse coding ... Additional arguments passed grepl()","code":""},{"path":"https://tshrum.github.io/rebl/reference/id_reversed_rebl_items.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Reversed REBL Items â id_reversed_rebl_items","text":"character vector REBL item names need reverse coding.","code":""},{"path":"https://tshrum.github.io/rebl/reference/id_reversed_rebl_items.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify Reversed REBL Items â id_reversed_rebl_items","text":"convenience function identifying REBL items need reverse coding based pattern. example, items need reverse coding \"reverse\" \"neg\" names, can use pattern identify . function filters provided vector REBL items return matching pattern.","code":""},{"path":[]},{"path":"https://tshrum.github.io/rebl/reference/id_reversed_rebl_items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Reversed REBL Items â id_reversed_rebl_items","text":"","code":"if (FALSE) { # \\dontrun{   # First get all REBL items   rebl_items <- id_rebl_items(example, '^rebl_')      # Then identify which ones need reverse coding   reversed_items <- id_reversed_rebl_items(rebl_items, 'reverse')   reversed_items <- id_reversed_rebl_items(rebl_items, '_neg$')   reversed_items <- id_reversed_rebl_items(rebl_items, 'item[135]$') } # }"},{"path":"https://tshrum.github.io/rebl/reference/recode_rebl.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode REBL Items â recode_rebl","title":"Recode REBL Items â recode_rebl","text":"Recode REBL items Yes/1/0. deal reverse coding. See reverse_code_rebl_items() .","code":""},{"path":"https://tshrum.github.io/rebl/reference/recode_rebl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode REBL Items â recode_rebl","text":"","code":"recode_rebl(df, rebl_items)"},{"path":"https://tshrum.github.io/rebl/reference/recode_rebl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode REBL Items â recode_rebl","text":"df dataframe includes REBL items rebl_items character vector REBL items. can use id_rebl_items() get .","code":""},{"path":"https://tshrum.github.io/rebl/reference/recode_rebl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode REBL Items â recode_rebl","text":"dataframe \"Yes\" \"\" coded 1 0 factors based one PEB","code":""},{"path":"https://tshrum.github.io/rebl/reference/recode_rebl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recode REBL Items â recode_rebl","text":"show warning REBL items provided appear data frame.","code":""},{"path":[]},{"path":"https://tshrum.github.io/rebl/reference/recode_rebl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode REBL Items â recode_rebl","text":"","code":"if (FALSE) { # \\dontrun{   rebl_items <- id_rebl_items(raw_example, '^(?!res).*')   df <- recode_rebl(raw_example, rebl_items) } # }"},{"path":"https://tshrum.github.io/rebl/reference/reverse_code_rebl_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse Code REBL Items â reverse_code_rebl_items","title":"Reverse Code REBL Items â reverse_code_rebl_items","text":"Reverse code specified REBL items flipping 1s 0s 0s 1s. typically done items \"\" represents pro-environmental behavior rather \"Yes\".","code":""},{"path":"https://tshrum.github.io/rebl/reference/reverse_code_rebl_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse Code REBL Items â reverse_code_rebl_items","text":"","code":"reverse_code_rebl_items(df, reversed_items)"},{"path":"https://tshrum.github.io/rebl/reference/reverse_code_rebl_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse Code REBL Items â reverse_code_rebl_items","text":"df dataframe containing REBL items reverse coded reversed_items character vector REBL item names need reverse coded","code":""},{"path":"https://tshrum.github.io/rebl/reference/reverse_code_rebl_items.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse Code REBL Items â reverse_code_rebl_items","text":"dataframe specified items reverse coded (1s become 0s, 0s become 1s, NAs remain NA)","code":""},{"path":[]},{"path":"https://tshrum.github.io/rebl/reference/reverse_code_rebl_items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse Code REBL Items â reverse_code_rebl_items","text":"","code":"if (FALSE) { # \\dontrun{   # Identify items that need reverse coding   reversed_items <- id_reversed_rebl_items(rebl_items, \"pattern\")   df_reversed <- reverse_code_rebl_items(df, reversed_items) } # }"}]
